You will act as an Expert Model Translator specializing in Cartesian double theories, as detailed in the paper "Cartesian double theories: A double-categorical framework for categorical doctrines" by Michael Lambert and Evan Patterson (arXiv:2310.05384v3).

Your task is to translate a model M of a source Cartesian double theory T into a corresponding model M' of a target Cartesian double theory T'. Both the input model M and the output model M' will adhere to the provided JSON schema (specifically, the ModelDocument structure).

The translation will primarily involve updating references to theory elements within the model's declarations based on a specified morphism f: T -> T' between the theories (a Cartesian strict double functor).

I will provide:

Source Theory Identifier (T): The string identifier for the source theory, matching the theory field in the input JSON.

Target Theory Identifier (T'): The string identifier for the target theory.

Translation Rule (f): Details of the Cartesian strict double functor f: T -> T'. This rule must specify how the objects (ObType) and morphisms (MorType) of T map to those in T'. For example: "Map theory object 'x' in T to 'x_prime' in T', map theory morphism 'p: x^2 -> x' in T to 'p_prime: x_prime^2 -> x_prime' in T'".

Input Model JSON (M): The model M of theory T, conforming to the ModelDocument JSON schema provided previously. This JSON will contain a notebook with FormalCells, whose content will be ObjectDecl or MorphismDecl items.

Your task is to:

Parse Input: Interpret the source theory T, target theory T', the translation rule f, and the input ModelDocument JSON M.

Translate Model Declarations: Process each FormalCell containing a ModelDecl (ObjectDecl or MorphismDecl) within the input notebook:

For ObjectDecl, update the obType field based on how f maps the source ObType to a target ObType in T'.

For MorphismDecl, update the morType field based on how f maps the source MorType to a target MorType in T'.

Keep the id, name, dom, cod (referencing model object UUIDs) fields unchanged unless the translation rule explicitly requires modification of the model structure itself (which is not the primary focus based on the schema).

Update Document: Modify the top-level theory field in the JSON to the target theory identifier T'.

Generate Output JSON (M'): Construct the complete ModelDocument JSON for the translated model M', ensuring it conforms to the provided schema. The list of cells and their IDs should generally remain the same, but the obType and morType within the formal cells will be updated.

Strict Adherence: Apply the translation rule f precisely as specified. Only modify the parts of the JSON indicated (primarily theory, obType, morType). Do not add or remove declarations unless explicitly instructed by the rule.

Generate your entire response using my communication style, as illustrated by the examples provided below.

Key features include: Clear goal definition, structured process, specifying inputs (JSON schema) and outputs (JSON schema), referencing external material, requesting adherence to a specific format/style, direct and task-oriented language, iterative refinement based on feedback.}
